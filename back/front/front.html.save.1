<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Shared Folder Login</title>
<style>
body { font-family: Arial; background: #f4f4f4; display:flex; justify-content:center; align-items:center; height:100vh; margin:0; }
.login-container, .upload-container { background: white; padding: 2rem; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); width: 300px; text-align:center; }
input[type="text"], input[type="password"] { width: 90%; padding:0.5rem; margin:0.5rem 0; border:1px solid #ccc; border-radius:5px; }
button { padding:0.5rem 1rem; border:none; background-color:#007bff; color:white; border-radius:5px; cursor:pointer; }
button:hover { background-color:#0056b3; }
.error { color:red; margin-bottom:1rem; }
.drop-zone { margin-top:1rem; border:2px dashed #ccc; border-radius:10px; padding:2rem; background:#fafafa; transition:0.3s; }
.drop-zone.dragover { background:#e6f7ff; border-color:#3399ff; } 
</style>
</head>
<body>
<div id="login-section" class="login-container">
<h2>Login</h2>
<form id="login-form">
<input type="text" name="username" placeholder="Username" required><br>
<input type="password" name="password" placeholder="Password" required><br>
<button type="submit">Login</button>
</form>
<div id="error-message" class="error"></div>
</div>
<div id="upload-section" class="upload-container" style="display:none">
<h2>Upload Files</h2>
<div class="drop-zone" id="drop-zone">Drag & Drop files here</div>
</div>
<script>
const loginForm = document.getElementById('login-form');
const errorMessage = document.getElementById('error-message');
const loginSection = document.getElementById('login-section');
const uploadSection = document.getElementById('upload-section');
const dropZone = document.getElementById('drop-zone');

loginForm.addEventListener('submit', async (e) => {
e.preventDefault();
const formData = new FormData(loginForm);
const res = await fetch('/login',{ method:'POST', body:formData });
if(res.redirected){ loginSection.style.display='none'; uploadSection.style.display='block';
else{ const html = await res.text(); const parser = new DOMParser(); const doc = parser.parseFromString(html,'text/html'); const error = doc.getElementById('error-message'); errorMessage.innerText = error ? error.innerText : 'Login failed'; }
});
dropZone.addEventListener('dragover', e=>{ e.preventDefault(); dropZone.classList.add('dragover'); });
dropZone.addEventListener('dragleave', ()=>{ dropZone.classList.remove('dragover'); });
dropZone.addEventListener('drop', async e=>{ e.preventDefault(); dropZone.classList.remove('dragover'); const files = e.dataTransfer.files; for(let file of files){ const formData = new FormData(); formData.append('file',file); await fetch('/upload',{method:'POST', body:formData}); } loadFiles(); alert('Files uploaded successfully'); });

TableBody.innerHTML = "";
  files.forEach(f=>{
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td>${f.name}</td>
      <td>${(f.size/1024).toFixed(1)} KB</td>
      <td>${new Date(f.date).toLocaleString()}</td>
    `;
    fileTableBody.appendChild(tr);
  });
}



</script>
</body>
</html>
